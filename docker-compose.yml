services:
  app_etl:
    pull_policy: build
    image: app_etl:latest
    volumes:
      - .:/app_etl
    build:
      dockerfile: Dockerfile
    network_mode: service:postgres_service
    # if you want to edit oytside a devcontainer,uncomment the "ports" config below AND comment out "network_mode: service:postgres_service"
    # ports:
      # - "8080:8080"
    depends_on:
      postgres_service:
        condition: service_healthy
    # command:
      # gunicorn --config gunicorn_config.py
      # python -m flask --app src/app_etl/app --debug run --host=0.0.0.0 --port=8080

  postgres_service:
    image: "postgres:latest"
    container_name: "postgres_service"
    restart: always
    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
    env_file:
      - .env
    volumes:
      - ./app_etl_data/:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_PASSWORD}"]
      start_period: 0s
      interval: 10s
      timeout: 30s
      retries: 3
  app_x_database_flyway_migrations:
    container_name: db_flyway_migrations
    environment:
      - FLYWAY_USER=${POSTGRES_USER}
      - FLYWAY_PASSWORD=${POSTGRES_PASSWORD}
      - FLYWAY_URL=jdbc:postgresql://postgres_service:${POSTGRES_PORT}/${POSTGRES_DB}
      - FLYWAY_SCHEMAS=flyway
      - FLYWAY_GROUP=true
    volumes:
      - $PWD/src/app_etl/migrations:/flyway/sql
    image: flyway/flyway:latest
    command: -locations=filesystem:/flyway/sql -connectRetries=60 migrate
    env_file:
      - .env
    depends_on:
      postgres_service:
        condition: service_healthy